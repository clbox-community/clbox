rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  	function isAuthentiacted() {
      return request.auth != null
    }
    function authEmail() {
      return request.auth.token.email
    }

    function getUser(user) {
      return get(/databases/$(database)/documents/user/$(user)).data
    }
    function getTeamUser(team, user) {
      return get(/databases/$(database)/documents/team/$(team)/user/$(user)).data
    }
    function getChannel(team, channel) {
      return get(/databases/$(database)/documents/team/$(team)/channel/$(channel)).data
    }
    function getCampaign(team, campaign) {
      return get(/databases/$(database)/documents/team/$(team)/campaign/$(campaign)).data
    }

    match /user/{user} {
      allow read: if isAuthentiacted() && user == authEmail()
    }
  	match /team/{team} {
      allow read: if isAuthentiacted() && getUser(authEmail()).teams[team] == true
    }
    match /team/{team}/user/{user}/{document=**} {
      allow read: if isAuthentiacted() && user == authEmail()
    }
    match /team/{team}/user/{user}/inbox/{document=**} {
      allow read,write: if isAuthentiacted() && user == authEmail()
    }
    match /team/{team}/user/{user}/user-assessment-pending/{document=**} {
      allow read,write: if isAuthentiacted() && user == authEmail()
    }
    match /team/{team}/user/{user}/user-assessment-sent/{document=**} {
      allow read,write: if isAuthentiacted() && user == authEmail()
    }
    match /team/{team}/user/{user}/skill-roadmap-result/{document=**} {
      allow read,write: if isAuthentiacted() && user == authEmail()
    }
    match /team/{team}/profile-public/{user} {
          allow read: if isAuthentiacted()
    }
    match /team/{team}/user/{user} {
      allow read: if isAuthentiacted() && getTeamUser(team, authEmail()).leader == true
    }
    match /team/{team}/user/{user} {
      allow read: if isAuthentiacted() && getTeamUser(team, user).chapterLeader == authEmail()
    }
    match /team/{team}/assessment/{assessment} {
      allow create: if isAuthentiacted();
      allow read: if isAuthentiacted() && (resource.data.chapterLeader == authEmail() || resource.data.author == authEmail() || authEmail() in resource.data.accessibleBy)
      allow read, write: if isAuthentiacted() && (resource.data.chapterLeader == authEmail() || resource.data.author == authEmail())
    }
    match /team/{team}/assessment-archive/{assessment} {
      allow create: if isAuthentiacted();
      allow read: if isAuthentiacted() && (resource.data.chapterLeader == authEmail() || authEmail() in resource.data.accessibleBy)
      allow read, write: if isAuthentiacted() && (resource.data.chapterLeader == authEmail() || resource.data.author == authEmail())
    }
    match /team/{team}/assessment/{assessment}/result/{userAssessment} {
      allow read, write: if isAuthentiacted() && get(/databases/$(database)/documents/team/$(team)/assessment/$(assessment)/result/$(userAssessment)).data.assessor == authEmail()
    }
    match /team/{team}/assessment/{assessment}/result/{document=**} {
      allow read: if isAuthentiacted() && (get(/databases/$(database)/documents/team/$(team)/assessment/$(assessment)).data.chapterLeader == authEmail() || authEmail() in get(/databases/$(database)/documents/team/$(team)/assessment/$(assessment)).data.accessibleBy)
    }
    match /team/{team}/user/{user}/data/skills {
      allow write: if isAuthentiacted() && user == authEmail()
    }
    match /team/{team}/user/{user}/data/skills {
      allow read: if isAuthentiacted() && getTeamUser(team, user).chapterLeader == authEmail()
    }
    match /team/{team}/user/{user}/data/assessment-categories {
      allow read, write: if isAuthentiacted() && getTeamUser(team, user).chapterLeader == authEmail()
    }
    match /team/{team}/sent/{user}/{document=**} {
      allow read, write: if isAuthentiacted() && user == authEmail()
    }
  	match /team/{team}/stats/{day} {
      allow read: if isAuthentiacted() && getUser(authEmail()).teams[team] == true
    }
    match /team/{team}/channel/{channel}/{document=**} {
      allow read, write: if isAuthentiacted() && getChannel(team, channel).managerMap[authEmail()] == true
    }
    match /team/{team}/survey/{survey} {
      allow read, delete: if true;
    }
    match /team/{team}/campaign/{campaign} {
      allow read: if isAuthentiacted() && authEmail() in resource.data.owners;
      allow write: if isAuthentiacted() && authEmail() in resource.data.owners && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['status']);
    }
    match /team/{team}/campaign/{campaign}/answers/{answers} {
      allow read: if isAuthentiacted() && authEmail() in getCampaign(team, campaign).owners;
    }
    match /team/{team}/campaign/{campaign}/answers/{answers} {
      allow write: if true;
    }
    match /team/{team}/skill/{document=**} {
      allow read, write: if isAuthentiacted();
    }

    // default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
